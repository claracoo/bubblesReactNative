{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar, Bubble, SystemMessage, Message, MessageText } from 'react-native-gifted-chat';\nexport var renderAvatar = function renderAvatar(props) {\n  return React.createElement(Avatar, _extends({}, props, {\n    containerStyle: {\n      left: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n      },\n      right: {}\n    },\n    imageStyle: {\n      left: {\n        alignSelf: \"baseline\"\n      },\n      right: {}\n    }\n  }));\n};\nexport var renderBubble = function renderBubble(props) {\n  return React.createElement(Bubble, _extends({}, props, {\n    containerStyle: {\n      left: {},\n      right: {}\n    },\n    wrapperStyle: {\n      left: {},\n      right: {}\n    },\n    bottomContainerStyle: {\n      left: {\n        borderColor: 'purple',\n        borderWidth: 4\n      },\n      right: {}\n    },\n    tickStyle: {},\n    usernameStyle: {},\n    containerToNextStyle: {\n      left: {},\n      right: {}\n    },\n    containerToPreviousStyle: {\n      left: {},\n      right: {}\n    }\n  }));\n};\nexport var renderSystemMessage = function renderSystemMessage(props) {\n  return React.createElement(SystemMessage, _extends({}, props, {\n    containerStyle: {\n      backgroundColor: 'pink'\n    },\n    wrapperStyle: {\n      borderWidth: 10,\n      borderColor: 'white'\n    },\n    textStyle: {\n      color: 'crimson',\n      fontWeight: '900'\n    }\n  }));\n};\nexport var renderMessage = function renderMessage(props) {\n  return React.createElement(Message, _extends({}, props, {\n    containerStyle: {\n      left: {\n        backgroundColor: 'lime'\n      },\n      right: {\n        backgroundColor: 'gold'\n      }\n    }\n  }));\n};\nexport var renderMessageText = function renderMessageText(props) {\n  return React.createElement(MessageText, _extends({}, props, {\n    containerStyle: {\n      left: {\n        backgroundColor: 'yellow'\n      },\n      right: {\n        backgroundColor: 'purple'\n      }\n    },\n    textStyle: {\n      left: {\n        color: 'red'\n      },\n      right: {}\n    },\n    linkStyle: {\n      left: {\n        color: 'orange'\n      },\n      right: {\n        color: 'orange'\n      }\n    },\n    customTextStyle: {\n      fontSize: 24,\n      lineHeight: 24\n    }\n  }));\n};\nexport var renderCustomView = function renderCustomView(_ref) {\n  var user = _ref.user;\n  return React.createElement(View, {\n    style: {\n      minHeight: 20,\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Current user:\", user.name), React.createElement(Text, null, \"From CustomView\"));\n};","map":{"version":3,"sources":["/Users/claracook/Desktop/reactNative/NewProject/Components/SystemMessage.js"],"names":["React","Avatar","Bubble","SystemMessage","Message","MessageText","renderAvatar","props","left","display","flexDirection","alignItems","right","alignSelf","renderBubble","borderColor","borderWidth","renderSystemMessage","backgroundColor","color","fontWeight","renderMessage","renderMessageText","fontSize","lineHeight","renderCustomView","user","minHeight","name"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { View, Text } from 'react-native';\nimport { Avatar, Bubble, SystemMessage, Message, MessageText } from 'react-native-gifted-chat';\n\nexport const renderAvatar = (props) => (\n  <Avatar\n    {...props}\n    containerStyle={{ left: { display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\" }, right: {} }}\n    imageStyle={{ left: { alignSelf: \"baseline\" }, right: {}}}\n  />\n);\n\nexport const renderBubble = (props) => (\n  <Bubble\n    {...props}\n    // renderTime={() => <Text>Time</Text>}\n    // renderTicks={() => <Text>Ticks</Text>}\n    containerStyle={{\n      left: {  },\n      right: {},\n    }}\n    wrapperStyle={{\n      left: {  },\n      right: {},\n    }}\n    bottomContainerStyle={{\n      left: { borderColor: 'purple', borderWidth: 4 },\n      right: {},\n    }}\n    tickStyle={{}}\n    usernameStyle={{  }}\n    containerToNextStyle={{\n      left: {  },\n      right: {},\n    }}\n    containerToPreviousStyle={{\n      left: {  },\n      right: {},\n    }}\n  />\n);\n\nexport const renderSystemMessage = (props) => (\n  <SystemMessage\n    {...props}\n    containerStyle={{ backgroundColor: 'pink' }}\n    wrapperStyle={{ borderWidth: 10, borderColor: 'white' }}\n    textStyle={{ color: 'crimson', fontWeight: '900' }}\n  />\n);\n\nexport const renderMessage = (props) => (\n  <Message\n    {...props}\n    // renderDay={() => <Text>Date</Text>}\n    containerStyle={{\n      left: { backgroundColor: 'lime' },\n      right: { backgroundColor: 'gold' },\n    }}\n  />\n);\n\nexport const renderMessageText = (props) => (\n  <MessageText\n    {...props}\n    containerStyle={{\n      left: { backgroundColor: 'yellow' },\n      right: { backgroundColor: 'purple' },\n    }}\n    textStyle={{\n      left: { color: 'red' },\n      right: { },\n    }}\n    linkStyle={{\n      left: { color: 'orange' },\n      right: { color: 'orange' },\n    }}\n    customTextStyle={{ fontSize: 24, lineHeight: 24 }}\n  />\n);\n\nexport const renderCustomView = ({ user }) => (\n  <View style={{ minHeight: 20, alignItems: 'center' }}>\n    <Text>\n      Current user:\n      {user.name}\n    </Text>\n    <Text>From CustomView</Text>\n  </View>\n);"]},"metadata":{},"sourceType":"module"}