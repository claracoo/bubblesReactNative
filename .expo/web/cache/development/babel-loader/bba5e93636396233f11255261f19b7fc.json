{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { ApiAiRequestError } from \"./Errors\";\nimport XhrRequest from \"./XhrRequest\";\nexport var DEFAULT_BASE_URL = \"https://api.api.ai/v1/\";\n\nvar ResetContextsRequest = function () {\n  function ResetContextsRequest(accessToken, sessionId, contextName) {\n    _classCallCheck(this, ResetContextsRequest);\n\n    if (contextName != null) {\n      this.uri = DEFAULT_BASE_URL + \"contexts/\" + contextName + \"?sessionId=\" + sessionId;\n    } else {\n      this.uri = DEFAULT_BASE_URL + \"contexts?sessionId=\" + sessionId;\n    }\n\n    this.headers = {\n      Authorization: \"Bearer \" + accessToken,\n      Accept: \"application/json\"\n    };\n  }\n\n  _createClass(ResetContextsRequest, [{\n    key: \"perform\",\n    value: function perform() {\n      return XhrRequest.delete(this.uri, null, this.headers, {}).then(ResetContextsRequest.handleSuccess.bind(this)).catch(ResetContextsRequest.handleError.bind(this));\n    }\n  }], [{\n    key: \"handleSuccess\",\n    value: function handleSuccess(xhr) {\n      return Promise.resolve(JSON.parse(xhr.responseText));\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(xhr) {\n      var error = new ApiAiRequestError(null);\n\n      try {\n        var serverResponse = JSON.parse(xhr.responseText);\n\n        if (serverResponse.status && serverResponse.status.errorDetails) {\n          error = new ApiAiRequestError(serverResponse.status.errorDetails, serverResponse.status.code);\n        } else {\n          error = new ApiAiRequestError(xhr.statusText, xhr.status);\n        }\n      } catch (e) {\n        error = new ApiAiRequestError(xhr.statusText, xhr.status);\n      }\n\n      return Promise.reject(error);\n    }\n  }]);\n\n  return ResetContextsRequest;\n}();\n\nexport default ResetContextsRequest;","map":{"version":3,"sources":["/Users/claracook/Desktop/reactNative/NewProject/node_modules/react-native-dialogflow/js/ResetContextsRequest.js"],"names":["ApiAiRequestError","XhrRequest","DEFAULT_BASE_URL","ResetContextsRequest","accessToken","sessionId","contextName","uri","headers","Authorization","Accept","delete","then","handleSuccess","bind","catch","handleError","xhr","Promise","resolve","JSON","parse","responseText","error","serverResponse","status","errorDetails","code","statusText","e","reject"],"mappings":";;AAGA,SAASA,iBAAT;AACA,OAAOC,UAAP;AACA,OAAO,IAAMC,gBAAgB,GAAG,wBAAzB;;IAGDC,oB;AACF,gCAAYC,WAAZ,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiD;AAAA;;AAE7C,QAAIA,WAAW,IAAI,IAAnB,EAAyB;AACrB,WAAKC,GAAL,GAAWL,gBAAgB,GAAG,WAAnB,GAAiCI,WAAjC,GAA+C,aAA/C,GAA+DD,SAA1E;AACH,KAFD,MAEO;AACH,WAAKE,GAAL,GAAWL,gBAAgB,GAAG,qBAAnB,GAA2CG,SAAtD;AACH;;AAED,SAAKG,OAAL,GAAe;AACXC,MAAAA,aAAa,EAAE,YAAYL,WADhB;AAEXM,MAAAA,MAAM,EAAE;AAFG,KAAf;AAIH;;;;WAoBD,mBAAU;AACN,aAAOT,UAAU,CAACU,MAAX,CAAkB,KAAKJ,GAAvB,EAA4B,IAA5B,EAAkC,KAAKC,OAAvC,EAAgD,EAAhD,EACFI,IADE,CACGT,oBAAoB,CAACU,aAArB,CAAmCC,IAAnC,CAAwC,IAAxC,CADH,EAEFC,KAFE,CAEIZ,oBAAoB,CAACa,WAArB,CAAiCF,IAAjC,CAAsC,IAAtC,CAFJ,CAAP;AAGH;;;WAvBD,uBAAqBG,GAArB,EAA0B;AACtB,aAAOC,OAAO,CAACC,OAAR,CAAgBC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,YAAf,CAAhB,CAAP;AACH;;;WACD,qBAAmBL,GAAnB,EAAwB;AACpB,UAAIM,KAAK,GAAG,IAAIvB,iBAAJ,CAAsB,IAAtB,CAAZ;;AACA,UAAI;AACA,YAAMwB,cAAc,GAAGJ,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,YAAf,CAAvB;;AACA,YAAIE,cAAc,CAACC,MAAf,IAAyBD,cAAc,CAACC,MAAf,CAAsBC,YAAnD,EAAiE;AAC7DH,UAAAA,KAAK,GAAG,IAAIvB,iBAAJ,CAAsBwB,cAAc,CAACC,MAAf,CAAsBC,YAA5C,EAA0DF,cAAc,CAACC,MAAf,CAAsBE,IAAhF,CAAR;AACH,SAFD,MAGK;AACDJ,UAAAA,KAAK,GAAG,IAAIvB,iBAAJ,CAAsBiB,GAAG,CAACW,UAA1B,EAAsCX,GAAG,CAACQ,MAA1C,CAAR;AACH;AACJ,OARD,CASA,OAAOI,CAAP,EAAU;AACNN,QAAAA,KAAK,GAAG,IAAIvB,iBAAJ,CAAsBiB,GAAG,CAACW,UAA1B,EAAsCX,GAAG,CAACQ,MAA1C,CAAR;AACH;;AACD,aAAOP,OAAO,CAACY,MAAR,CAAeP,KAAf,CAAP;AACH;;;;;;AAOL,eAAepB,oBAAf","sourcesContent":["/**\n * Created by toni on 30.08.2017.\n */\nimport { ApiAiRequestError } from \"./Errors\";\nimport XhrRequest from './XhrRequest';\nexport const DEFAULT_BASE_URL = \"https://api.api.ai/v1/\";\n\n\nclass ResetContextsRequest {\n    constructor(accessToken, sessionId, contextName) {\n\n        if (contextName != null) {\n            this.uri = DEFAULT_BASE_URL + \"contexts/\" + contextName + \"?sessionId=\" + sessionId;\n        } else {\n            this.uri = DEFAULT_BASE_URL + \"contexts?sessionId=\" + sessionId;\n        }\n\n        this.headers = {\n            Authorization: \"Bearer \" + accessToken,\n            Accept: \"application/json\",\n        };\n    }\n    static handleSuccess(xhr) {\n        return Promise.resolve(JSON.parse(xhr.responseText));\n    }\n    static handleError(xhr) {\n        let error = new ApiAiRequestError(null);\n        try {\n            const serverResponse = JSON.parse(xhr.responseText);\n            if (serverResponse.status && serverResponse.status.errorDetails) {\n                error = new ApiAiRequestError(serverResponse.status.errorDetails, serverResponse.status.code);\n            }\n            else {\n                error = new ApiAiRequestError(xhr.statusText, xhr.status);\n            }\n        }\n        catch (e) {\n            error = new ApiAiRequestError(xhr.statusText, xhr.status);\n        }\n        return Promise.reject(error);\n    }\n    perform() {\n        return XhrRequest.delete(this.uri, null, this.headers, {})\n            .then(ResetContextsRequest.handleSuccess.bind(this))\n            .catch(ResetContextsRequest.handleError.bind(this));\n    }\n}\nexport default ResetContextsRequest;"]},"metadata":{},"sourceType":"module"}