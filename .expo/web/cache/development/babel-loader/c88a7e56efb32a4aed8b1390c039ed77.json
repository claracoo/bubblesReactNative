{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Avatar, Bubble, SystemMessage, Message, MessageText } from 'react-native-gifted-chat';\nexport var renderAvatar = function renderAvatar(props) {\n  return React.createElement(Avatar, _extends({}, props, {\n    containerStyle: {\n      left: {},\n      right: {}\n    },\n    imageStyle: {\n      left: {},\n      right: {}\n    }\n  }));\n};\nexport var renderBubble = function renderBubble(props) {\n  return React.createElement(Bubble, _extends({}, props, {\n    containerStyle: {\n      left: {},\n      right: {}\n    },\n    wrapperStyle: {\n      left: {\n        borderColor: \"#DBDBDB\",\n        borderWidth: 1,\n        backgroundColor: \"white\",\n        width: 200\n      },\n      right: {}\n    },\n    bottomContainerStyle: {\n      left: {},\n      right: {}\n    },\n    tickStyle: {},\n    usernameStyle: {},\n    containerToNextStyle: {\n      left: {},\n      right: {}\n    },\n    containerToPreviousStyle: {\n      left: {},\n      right: {\n        fontSize: 8\n      }\n    }\n  }));\n};\nexport var renderSystemMessage = function renderSystemMessage(props) {\n  return React.createElement(SystemMessage, _extends({}, props, {\n    containerStyle: {\n      left: {}\n    },\n    wrapperStyle: {},\n    textStyle: {}\n  }));\n};\nexport var renderMessage = function renderMessage(props) {\n  return React.createElement(Message, _extends({}, props, {\n    containerStyle: {\n      left: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        flexWrap: \"wrap\"\n      },\n      right: {}\n    }\n  }));\n};\nexport var renderMessageText = function renderMessageText(props) {\n  return React.createElement(MessageText, _extends({}, props, {\n    containerStyle: {\n      left: {\n        backgroundColor: \"#DCEEEA\"\n      },\n      right: {\n        backgroundColor: \"#DCEEEA\",\n        borderColor: \"#DBDBDB\",\n        borderWidth: 1,\n        borderRadius: 14\n      }\n    },\n    textStyle: {\n      left: {},\n      right: {\n        color: \"black\"\n      }\n    },\n    linkStyle: {\n      left: {},\n      right: {}\n    },\n    customTextStyle: {}\n  }));\n};\nexport var renderCustomView = function renderCustomView(_ref) {\n  var user = _ref.user;\n  return React.createElement(View, {\n    style: {}\n  });\n};","map":{"version":3,"sources":["/Users/claracook/Desktop/reactNative/NewProject/Components/SystemMessage.js"],"names":["React","Avatar","Bubble","SystemMessage","Message","MessageText","renderAvatar","props","left","right","renderBubble","borderColor","borderWidth","backgroundColor","width","fontSize","renderSystemMessage","renderMessage","display","flexDirection","alignItems","flexWrap","renderMessageText","borderRadius","color","renderCustomView","user"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { View, Text } from 'react-native';\nimport { Avatar, Bubble, SystemMessage, Message, MessageText } from 'react-native-gifted-chat';\n\nexport const renderAvatar = (props) => (\n  <Avatar\n    {...props}\n    containerStyle={{ left: {  }, right: {} }}\n    imageStyle={{ left: { }, right: {}}}\n  />\n);\n\nexport const renderBubble = (props) => (\n  <Bubble\n    {...props}\n    // renderTime={() => <Text>Time</Text>}\n    // renderTicks={() => <Text>Ticks</Text>}\n    containerStyle={{\n      left: {},\n      right: {},\n    }}\n    wrapperStyle={{\n      left: { borderColor: \"#DBDBDB\", borderWidth: 1, backgroundColor: \"white\", width: 200,  },\n      right: {},\n    }}\n    bottomContainerStyle={{\n      left: { },\n      right: {},\n    }}\n    tickStyle={{}}\n    usernameStyle={{  }}\n    containerToNextStyle={{\n      left: { },\n      right: {},\n    }}\n    containerToPreviousStyle={{\n      left: {  },\n      right: {fontSize: 8},\n    }}\n  />\n);\n\nexport const renderSystemMessage = (props) => (\n  <SystemMessage\n    {...props}\n    containerStyle={{ left: {} }}\n    wrapperStyle={{  }}\n    textStyle={{}}\n  />\n);\n\nexport const renderMessage = (props) => (\n  <Message\n    {...props}\n    // renderDay={() => <Text>Date</Text>}\n    containerStyle={{\n      left: { display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\", flexWrap: \"wrap\"},\n      right: {  },\n    }}\n  />\n);\n\nexport const renderMessageText = (props) => (\n  <MessageText\n    {...props}\n    containerStyle={{\n      left: { backgroundColor: \"#DCEEEA\" },\n      right: { backgroundColor: \"#DCEEEA\", borderColor: \"#DBDBDB\", borderWidth: 1, borderRadius: 14 },\n    }}\n    textStyle={{\n      left: { },\n      right: { color: \"black\" },\n    }}\n    linkStyle={{\n      left: {  },\n      right: {  },\n    }}\n    customTextStyle={{ }}\n  />\n);\n\nexport const renderCustomView = ({ user }) => (\n  <View style={{ }}>\n    {/* <Text>\n      Current user:\n      {user.name}\n    </Text>\n    <Text>From CustomView</Text> */}\n  </View>\n);\n\n"]},"metadata":{},"sourceType":"module"}