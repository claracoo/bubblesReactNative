{"ast":null,"code":"'use strict';\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nimport { Dialogflow } from \"./js/Dialogflow\";\nimport { Dialogflow_V2 } from \"./js/Dialogflow_V2\";\nimport Voice from \"./js/RCTVoice\";\nvar dialogflow = new Dialogflow();\n\ndialogflow.setConfiguration = function (accessToken, languageTag) {\n  dialogflow.accessToken = accessToken;\n  dialogflow.languageTag = languageTag;\n  dialogflow.sessionId = dialogflow.sessionId ? dialogflow.sessionId : dialogflow.guid();\n\n  Voice.onSpeechStart = function () {\n    return function (c) {\n      return dialogflow.onListeningStarted(c);\n    };\n  };\n\n  Voice.onSpeechEnd = function () {\n    return function (c) {\n      return dialogflow.onListeningFinished(c);\n    };\n  };\n};\n\ndialogflow.startListening = function (onResult, onError) {\n  dialogflow.subscription = NativeAppEventEmitter.addListener('onSpeechResults', function (result) {\n    if (result.value) {\n      dialogflow.requestQuery(result.value[0], onResult, onError);\n    }\n  });\n  Voice.start(dialogflow.languageTag);\n};\n\ndialogflow.finishListening = function () {\n  Voice.stop();\n};\n\nexport default dialogflow;\nvar dialogflow2 = new Dialogflow_V2();\n\ndialogflow2.setConfiguration = function _callee(clientEmail, privateKey, languageTag, projectId) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(dialogflow2.generateAccessToken(clientEmail, privateKey));\n\n        case 2:\n          dialogflow2.accessToken = _context.sent;\n          dialogflow2.languageTag = languageTag;\n          dialogflow2.projectId = projectId;\n          dialogflow2.sessionId = dialogflow2.sessionId ? dialogflow2.sessionId : dialogflow2.guid();\n\n          Voice.onSpeechStart = function (c) {\n            dialogflow2.speechResult = null;\n\n            if (dialogflow2.onListeningStarted) {\n              dialogflow2.onListeningStarted(c);\n            }\n          };\n\n          Voice.onSpeechEnd = function (c) {\n            if (dialogflow2.speechResult) {\n              dialogflow2.requestQuery(dialogflow2.speechResult[0], dialogflow2.onResult, dialogflow2.onError);\n            }\n\n            if (dialogflow2.onListeningFinished) {\n              dialogflow2.onListeningFinished(c);\n            }\n          };\n\n          Voice.onSpeechVolumeChanged = function (c) {\n            if (dialogflow2.onAudioLevel) {\n              dialogflow2.onAudioLevel(c);\n            }\n          };\n\n          Voice.onSpeechResults = function (result) {\n            if (result.value) {\n              dialogflow2.speechResult = result.value;\n            }\n          };\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\ndialogflow2.startListening = function (onResult, onError) {\n  dialogflow2.onResult = onResult;\n  dialogflow2.onError = onError;\n  Voice.start(dialogflow2.languageTag);\n};\n\ndialogflow2.finishListening = function () {\n  Voice.stop();\n};\n\nexport { dialogflow2 as Dialogflow_V2 };","map":{"version":3,"sources":["/Users/claracook/Desktop/reactNative/NewProject/node_modules/react-native-dialogflow/index.js"],"names":["NativeAppEventEmitter","Dialogflow","Dialogflow_V2","Voice","dialogflow","setConfiguration","accessToken","languageTag","sessionId","guid","onSpeechStart","c","onListeningStarted","onSpeechEnd","onListeningFinished","startListening","onResult","onError","subscription","addListener","result","value","requestQuery","start","finishListening","stop","dialogflow2","clientEmail","privateKey","projectId","generateAccessToken","speechResult","onSpeechVolumeChanged","onAudioLevel","onSpeechResults"],"mappings":"AAAA;;;SAESA,qB;AACT,SAASC,UAAT;AACA,SAASC,aAAT;AACA,OAAOC,KAAP;AAKA,IAAIC,UAAU,GAAG,IAAIH,UAAJ,EAAjB;;AAEAG,UAAU,CAACC,gBAAX,GAA8B,UAAUC,WAAV,EAAuBC,WAAvB,EAAoC;AAC9DH,EAAAA,UAAU,CAACE,WAAX,GAAyBA,WAAzB;AACAF,EAAAA,UAAU,CAACG,WAAX,GAAyBA,WAAzB;AACAH,EAAAA,UAAU,CAACI,SAAX,GAAuBJ,UAAU,CAACI,SAAX,GAAuBJ,UAAU,CAACI,SAAlC,GAA8CJ,UAAU,CAACK,IAAX,EAArE;;AAEAN,EAAAA,KAAK,CAACO,aAAN,GAAsB;AAAA,WAAM,UAACC,CAAD;AAAA,aAAOP,UAAU,CAACQ,kBAAX,CAA8BD,CAA9B,CAAP;AAAA,KAAN;AAAA,GAAtB;;AACAR,EAAAA,KAAK,CAACU,WAAN,GAAoB;AAAA,WAAM,UAACF,CAAD;AAAA,aAAOP,UAAU,CAACU,mBAAX,CAA+BH,CAA/B,CAAP;AAAA,KAAN;AAAA,GAApB;AACH,CAPD;;AASAP,UAAU,CAACW,cAAX,GAA4B,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AAErDb,EAAAA,UAAU,CAACc,YAAX,GAA0BlB,qBAAqB,CAACmB,WAAtB,CACtB,iBADsB,EAEtB,UAACC,MAAD,EAAY;AACR,QAAIA,MAAM,CAACC,KAAX,EAAkB;AACdjB,MAAAA,UAAU,CAACkB,YAAX,CAAwBF,MAAM,CAACC,KAAP,CAAa,CAAb,CAAxB,EAAyCL,QAAzC,EAAmDC,OAAnD;AACH;AAEJ,GAPqB,CAA1B;AAUAd,EAAAA,KAAK,CAACoB,KAAN,CAAYnB,UAAU,CAACG,WAAvB;AACH,CAbD;;AAeAH,UAAU,CAACoB,eAAX,GAA6B,YAAY;AACrCrB,EAAAA,KAAK,CAACsB,IAAN;AACH,CAFD;;AAIA,eAAerB,UAAf;AAMA,IAAIsB,WAAW,GAAG,IAAIxB,aAAJ,EAAlB;;AAEAwB,WAAW,CAACrB,gBAAZ,GAA+B,iBAAgBsB,WAAhB,EAA6BC,UAA7B,EAAyCrB,WAAzC,EAAsDsB,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACKH,WAAW,CAACI,mBAAZ,CAAgCH,WAAhC,EAA6CC,UAA7C,CADL;;AAAA;AAC3BF,UAAAA,WAAW,CAACpB,WADe;AAE3BoB,UAAAA,WAAW,CAACnB,WAAZ,GAA0BA,WAA1B;AACAmB,UAAAA,WAAW,CAACG,SAAZ,GAAwBA,SAAxB;AACAH,UAAAA,WAAW,CAAClB,SAAZ,GAAwBkB,WAAW,CAAClB,SAAZ,GAAwBkB,WAAW,CAAClB,SAApC,GAAgDkB,WAAW,CAACjB,IAAZ,EAAxE;;AAGAN,UAAAA,KAAK,CAACO,aAAN,GAAsB,UAACC,CAAD,EAAO;AACzBe,YAAAA,WAAW,CAACK,YAAZ,GAA2B,IAA3B;;AACA,gBAAIL,WAAW,CAACd,kBAAhB,EAAoC;AAChCc,cAAAA,WAAW,CAACd,kBAAZ,CAA+BD,CAA/B;AACH;AACJ,WALD;;AAOAR,UAAAA,KAAK,CAACU,WAAN,GAAoB,UAACF,CAAD,EAAO;AAEvB,gBAAIe,WAAW,CAACK,YAAhB,EAA8B;AAC1BL,cAAAA,WAAW,CAACJ,YAAZ,CAAyBI,WAAW,CAACK,YAAZ,CAAyB,CAAzB,CAAzB,EAAsDL,WAAW,CAACV,QAAlE,EAA4EU,WAAW,CAACT,OAAxF;AACH;;AAED,gBAAIS,WAAW,CAACZ,mBAAhB,EAAqC;AACjCY,cAAAA,WAAW,CAACZ,mBAAZ,CAAgCH,CAAhC;AACH;AACJ,WATD;;AAWAR,UAAAA,KAAK,CAAC6B,qBAAN,GAA8B,UAACrB,CAAD,EAAO;AACjC,gBAAIe,WAAW,CAACO,YAAhB,EAA8B;AAC1BP,cAAAA,WAAW,CAACO,YAAZ,CAAyBtB,CAAzB;AACH;AACJ,WAJD;;AAMAR,UAAAA,KAAK,CAAC+B,eAAN,GAAwB,UAACd,MAAD,EAAY;AAChC,gBAAIA,MAAM,CAACC,KAAX,EAAkB;AACdK,cAAAA,WAAW,CAACK,YAAZ,GAA2BX,MAAM,CAACC,KAAlC;AACH;AACJ,WAJD;;AA/B2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAsCAK,WAAW,CAACX,cAAZ,GAA6B,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACtDS,EAAAA,WAAW,CAACV,QAAZ,GAAuBA,QAAvB;AACAU,EAAAA,WAAW,CAACT,OAAZ,GAAsBA,OAAtB;AAEAd,EAAAA,KAAK,CAACoB,KAAN,CAAYG,WAAW,CAACnB,WAAxB;AACH,CALD;;AAOAmB,WAAW,CAACF,eAAZ,GAA8B,YAAY;AACtCrB,EAAAA,KAAK,CAACsB,IAAN;AACH,CAFD;;AAIA,SAASC,WAAW,IAAIxB,aAAxB","sourcesContent":["'use strict';\n\nimport { NativeAppEventEmitter } from 'react-native';\nimport { Dialogflow } from './js/Dialogflow';\nimport { Dialogflow_V2 } from './js/Dialogflow_V2';\nimport Voice from './js/RCTVoice';\n\n/**\n *  DIALOGFLOW V1\n */\nvar dialogflow = new Dialogflow();\n\ndialogflow.setConfiguration = function (accessToken, languageTag) {\n    dialogflow.accessToken = accessToken;\n    dialogflow.languageTag = languageTag;\n    dialogflow.sessionId = dialogflow.sessionId ? dialogflow.sessionId : dialogflow.guid();\n\n    Voice.onSpeechStart = () => (c) => dialogflow.onListeningStarted(c);\n    Voice.onSpeechEnd = () => (c) => dialogflow.onListeningFinished(c);\n}\n\ndialogflow.startListening = function (onResult, onError) {\n\n    dialogflow.subscription = NativeAppEventEmitter.addListener(\n        'onSpeechResults',\n        (result) => {\n            if (result.value) {\n                dialogflow.requestQuery(result.value[0], onResult, onError);\n            }\n\n        }\n    );\n\n    Voice.start(dialogflow.languageTag);\n}\n\ndialogflow.finishListening = function () {\n    Voice.stop();\n}\n\nexport default dialogflow;\n\n\n/**\n * DIALOGFLOW V2\n */\nvar dialogflow2 = new Dialogflow_V2();\n\ndialogflow2.setConfiguration = async function (clientEmail, privateKey, languageTag, projectId) {\n    dialogflow2.accessToken = await dialogflow2.generateAccessToken(clientEmail, privateKey);\n    dialogflow2.languageTag = languageTag;\n    dialogflow2.projectId = projectId;\n    dialogflow2.sessionId = dialogflow2.sessionId ? dialogflow2.sessionId : dialogflow2.guid();\n\n    // set listeners\n    Voice.onSpeechStart = (c) => {\n        dialogflow2.speechResult = null;\n        if (dialogflow2.onListeningStarted) {\n            dialogflow2.onListeningStarted(c);\n        }\n    }\n\n    Voice.onSpeechEnd = (c) => {\n\n        if (dialogflow2.speechResult) {\n            dialogflow2.requestQuery(dialogflow2.speechResult[0], dialogflow2.onResult, dialogflow2.onError);\n        }\n\n        if (dialogflow2.onListeningFinished) {\n            dialogflow2.onListeningFinished(c);\n        }\n    }\n\n    Voice.onSpeechVolumeChanged = (c) => {\n        if (dialogflow2.onAudioLevel) {\n            dialogflow2.onAudioLevel(c);\n        }\n    }\n\n    Voice.onSpeechResults = (result) => {\n        if (result.value) {\n            dialogflow2.speechResult = result.value;\n        }\n    }\n}\n\ndialogflow2.startListening = function (onResult, onError) {\n    dialogflow2.onResult = onResult;\n    dialogflow2.onError = onError;\n\n    Voice.start(dialogflow2.languageTag);\n}\n\ndialogflow2.finishListening = function () {\n    Voice.stop();\n}\n\nexport { dialogflow2 as Dialogflow_V2 };\n\n"]},"metadata":{},"sourceType":"module"}